{"version":3,"file":"ngx-leaflet-markercluster.js","sources":["../leaflet-markercluster/leaflet-markercluster.directive.js","../leaflet-markercluster/leaflet-markercluster.module.js"],"sourcesContent":["import { Directive, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChange } from '@angular/core';\nimport { LeafletDirective, LeafletDirectiveWrapper } from '@asymmetrik/ngx-leaflet';\nimport * as L from 'leaflet';\nimport 'leaflet.markercluster';\nvar LeafletMarkerClusterDirective = /** @class */ (function () {\n    function LeafletMarkerClusterDirective(leafletDirective) {\n        // Hexbin data binding\n        this.markerData = [];\n        // Fired when the marker cluster is created\n        this.markerClusterReady = new EventEmitter();\n        this.leafletDirective = new LeafletDirectiveWrapper(leafletDirective);\n    }\n    LeafletMarkerClusterDirective.prototype.ngOnInit = function () {\n        this.leafletDirective.init();\n        var map = this.leafletDirective.getMap();\n        this.markerClusterGroup = L.markerClusterGroup(this.markerClusterOptions);\n        // Fire the ready event\n        this.markerClusterReady.emit(this.markerClusterGroup);\n        // Add the marker cluster group to the map\n        this.markerClusterGroup.addTo(map);\n        // Set the data\n        this.setData(this.markerData);\n    };\n    LeafletMarkerClusterDirective.prototype.ngOnChanges = function (changes) {\n        // Set the new data\n        if (changes['markerData']) {\n            this.setData(this.markerData);\n        }\n    };\n    LeafletMarkerClusterDirective.prototype.setData = function (layers) {\n        if (null != this.markerClusterGroup) {\n            this.markerClusterGroup.clearLayers();\n            this.markerClusterGroup.addLayers(layers);\n        }\n    };\n    LeafletMarkerClusterDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[leafletMarkerCluster]',\n                },] },\n    ];\n    /** @nocollapse */\n    LeafletMarkerClusterDirective.ctorParameters = function () { return [\n        { type: LeafletDirective, },\n    ]; };\n    LeafletMarkerClusterDirective.propDecorators = {\n        \"markerData\": [{ type: Input, args: ['leafletMarkerCluster',] },],\n        \"markerClusterOptions\": [{ type: Input, args: ['leafletMarkerClusterOptions',] },],\n        \"markerClusterReady\": [{ type: Output, args: ['leafletMarkerClusterReady',] },],\n    };\n    return LeafletMarkerClusterDirective;\n}());\nexport { LeafletMarkerClusterDirective };\n//# sourceMappingURL=leaflet-markercluster.directive.js.map","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { LeafletMarkerClusterDirective } from './leaflet-markercluster.directive';\nvar LeafletMarkerClusterModule = /** @class */ (function () {\n    function LeafletMarkerClusterModule() {\n    }\n    LeafletMarkerClusterModule.forRoot = function () {\n        return { ngModule: LeafletMarkerClusterModule, providers: [] };\n    };\n    LeafletMarkerClusterModule.decorators = [\n        { type: NgModule, args: [{\n                    exports: [LeafletMarkerClusterDirective],\n                    declarations: [LeafletMarkerClusterDirective]\n                },] },\n    ];\n    /** @nocollapse */\n    LeafletMarkerClusterModule.ctorParameters = function () { return []; };\n    return LeafletMarkerClusterModule;\n}());\nexport { LeafletMarkerClusterModule };\n//# sourceMappingURL=leaflet-markercluster.module.js.map"],"names":["EventEmitter","LeafletDirectiveWrapper","L.markerClusterGroup","Directive","LeafletDirective","Input","Output","NgModule"],"mappings":";;;;;;;AAIA,IAAI,6BAA6B,kBAAkB,YAAY;IAC3D,SAAS,6BAA6B,CAAC,gBAAgB,EAAE;;QAErD,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;;QAErB,IAAI,CAAC,kBAAkB,GAAG,IAAIA,iBAAY,EAAE,CAAC;QAC7C,IAAI,CAAC,gBAAgB,GAAG,IAAIC,kCAAuB,CAAC,gBAAgB,CAAC,CAAC;KACzE;IACD,6BAA6B,CAAC,SAAS,CAAC,QAAQ,GAAG,YAAY;QAC3D,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;QAC7B,IAAI,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC;QACzC,IAAI,CAAC,kBAAkB,GAAGC,oBAAoB,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;;QAE1E,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;;QAEtD,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;;QAEnC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KACjC,CAAC;IACF,6BAA6B,CAAC,SAAS,CAAC,WAAW,GAAG,UAAU,OAAO,EAAE;;QAErE,IAAI,OAAO,CAAC,YAAY,CAAC,EAAE;YACvB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SACjC;KACJ,CAAC;IACF,6BAA6B,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,MAAM,EAAE;QAChE,IAAI,IAAI,IAAI,IAAI,CAAC,kBAAkB,EAAE;YACjC,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;YACtC,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;SAC7C;KACJ,CAAC;IACF,6BAA6B,CAAC,UAAU,GAAG;QACvC,EAAE,IAAI,EAAEC,cAAS,EAAE,IAAI,EAAE,CAAC;oBACd,QAAQ,EAAE,wBAAwB;iBACrC,EAAE,EAAE;KAChB,CAAC;;IAEF,6BAA6B,CAAC,cAAc,GAAG,YAAY,EAAE,OAAO;QAChE,EAAE,IAAI,EAAEC,2BAAgB,GAAG;KAC9B,CAAC,EAAE,CAAC;IACL,6BAA6B,CAAC,cAAc,GAAG;QAC3C,YAAY,EAAE,CAAC,EAAE,IAAI,EAAEC,UAAK,EAAE,IAAI,EAAE,CAAC,sBAAsB,EAAE,EAAE,EAAE;QACjE,sBAAsB,EAAE,CAAC,EAAE,IAAI,EAAEA,UAAK,EAAE,IAAI,EAAE,CAAC,6BAA6B,EAAE,EAAE,EAAE;QAClF,oBAAoB,EAAE,CAAC,EAAE,IAAI,EAAEC,WAAM,EAAE,IAAI,EAAE,CAAC,2BAA2B,EAAE,EAAE,EAAE;KAClF,CAAC;IACF,OAAO,6BAA6B,CAAC;CACxC,EAAE,CAAC;;AChDJ,IAAI,0BAA0B,kBAAkB,YAAY;IACxD,SAAS,0BAA0B,GAAG;KACrC;IACD,0BAA0B,CAAC,OAAO,GAAG,YAAY;QAC7C,OAAO,EAAE,QAAQ,EAAE,0BAA0B,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC;KAClE,CAAC;IACF,0BAA0B,CAAC,UAAU,GAAG;QACpC,EAAE,IAAI,EAAEC,aAAQ,EAAE,IAAI,EAAE,CAAC;oBACb,OAAO,EAAE,CAAC,6BAA6B,CAAC;oBACxC,YAAY,EAAE,CAAC,6BAA6B,CAAC;iBAChD,EAAE,EAAE;KAChB,CAAC;;IAEF,0BAA0B,CAAC,cAAc,GAAG,YAAY,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC;IACvE,OAAO,0BAA0B,CAAC;CACrC,EAAE,CAAC;;;;;;;;;;;;"}